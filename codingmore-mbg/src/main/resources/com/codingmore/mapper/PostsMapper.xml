<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codingmore.mapper.PostsMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.codingmore.model.Posts">
        <id column="posts_id" property="postsId"/>
        <result column="post_author" property="postAuthor"/>
        <result column="post_date" property="postDate"/>
        <result column="post_content" property="postContent"/>
        <result column="html_content" property="htmlContent"/>
        <result column="post_title" property="postTitle"/>
        <result column="post_excerpt" property="postExcerpt"/>
        <result column="post_status" property="postStatus"/>
        <result column="comment_status" property="commentStatus"/>
        <result column="page_view" property="pageView"/>
        <result column="post_modified" property="postModified"/>
        <result column="menu_order" property="menuOrder"/>
        <result column="comment_count" property="commentCount"/>
        <result column="attribute" property="attribute" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler" />
    </resultMap>

    <resultMap id="PostsVoResultMap" type="com.codingmore.vo.PostsVo" extends="BaseResultMap">
        <result column="user_nicename" property="userNiceName"/>
        <result column="tags_name" property="tagsName"/>
        <result column="term_taxonomy_id" property="termTaxonomyId"/>
    </resultMap>

    <resultMap id="PostsVoResultMapWithTagList" type="com.codingmore.vo.PostsVo" extends="BaseResultMap">
        <result column="user_nicename" property="userNiceName"/>
        <result column="term_taxonomy_id" property="termTaxonomyId"/>
        <collection property="tags" ofType="com.codingmore.model.PostTag">
            <result column="description" property="description"/>
            <result column="post_tag_id" property="postTagId"/>
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        posts_id, post_author, post_date, post_content,html_content, post_title,
        post_excerpt, post_status, comment_status, post_modified, menu_order, comment_count,attribute,page_view
    </sql>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List_No_Content">
        posts_id, post_author, post_date, post_title, post_excerpt, post_status, comment_status, post_modified,
        menu_order, comment_count,a.attribute,page_view
    </sql>


    <select id="findByPage" resultMap="PostsVoResultMap">
        select  <include refid="Base_Column_List_No_Content" />, b.term_taxonomy_id,c.user_nicename
        from posts a
                 left join term_relationships b
                           on a.posts_id = b.term_relationships_id
                 left join users c on a.post_author = c.users_id ${ew.customSqlSegment}
    </select>

    <select id="findByPageWithTag" resultMap="PostsVoResultMapWithTagList">
        select  <include refid="Base_Column_List_No_Content" />, b.term_taxonomy_id,c.user_nicename,pt.description,pt.post_tag_id
        FROM post_tag_relation ptr, post_tag pt, posts a
        left join term_relationships b on a.posts_id = b.term_relationships_id
        left join users c on a.post_author = c.users_id
        where a.posts_id = ptr.post_id AND pt.post_tag_id = ptr.post_tag_id
        AND ${ew.sqlSegment}
    </select>

    <select id="findByPageWithTagPaged" resultMap="PostsVoResultMapWithTagList">
        SELECT a.*, pt.description, ptr.post_tag_id
        FROM (
                 SELECT
                    <include refid="Base_Column_List_No_Content" />,
                     b.term_taxonomy_id,
                     c.user_nicename
                 FROM
                     posts a
                         LEFT JOIN term_relationships b ON a.posts_id = b.term_relationships_id
                         LEFT JOIN users c ON a.post_author = c.users_id
                 WHERE 1=1
                 <if test="searchTagId != null">
                    and a.posts_id in (select post_id from post_tag_relation where post_tag_id=#{searchTagId})
                 </if>
                 and ${ew.sqlSegment}
                     LIMIT #{pageStart}, #{pageSize}
             ) a
                 LEFT JOIN post_tag_relation ptr on a.posts_id = ptr.post_id
                 LEFT JOIN post_tag pt on pt.post_tag_id = ptr.post_tag_id
    </select>

</mapper>
